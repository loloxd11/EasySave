; Script generated by the Inno Setup Script Wizard.
; Modifié pour inclure l'installation conditionnelle de CryptoSoft

#define MyAppName "EasySave"
#define MyAppVersion "1.1.0"
#define MyAppPublisher "Prosoft, Inc."
#define MyAppURL "https://www.prosoft.com/"
#define MyAppExeName "easysave.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
AppId={{0AEADF13-C221-4954-A198-AFC6B7D084E5}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
ArchitecturesAllowed=x64compatible
ArchitecturesInstallIn64BitMode=x64compatible
ChangesAssociations=yes
DisableProgramGroupPage=yes
PrivilegesRequiredOverridesAllowed=dialog
OutputBaseFilename=EasySave_setup
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
; EasySave app
Source: "C:\Users\lecle\source\repos\loloxd11\EasySave\EasySave\bin\Release\net8.0-windows\win-x64\publish\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

; Fichier config
Source: "C:\Users\lecle\AppData\Roaming\EasySave\default_config.json"; DestDir: "{userappdata}\EasySave"; DestName: "config.json"; Flags: onlyifdoesntexist

; CryptoSoft.exe à copier si besoin
Source: "C:\Program Files\CryptoSoft\CryptoSoft.exe"; DestDir: "{tmp}"; Flags: ignoreversion

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]

function CryptoSoftIsInstalled(): Boolean;
var
  InstallPath: string;
begin
  InstallPath := ExpandConstant('{pf}\CryptoSoft\CryptoSoft.exe');
  Result := FileExists(InstallPath);
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  UserResponse: Integer;
  CryptoSoftTargetDir: string;
begin
  if CurStep = ssInstall then
  begin
    if not CryptoSoftIsInstalled() then
    begin
      UserResponse := MsgBox('CryptoSoft n''a pas été trouvé sur votre système.'#13#10 +
                             'Souhaitez-vous l''installer maintenant ? Cela est nécessaire pour assurer le bon fonctionnement de EasySave.',
                             mbConfirmation, MB_YESNO);

      if UserResponse = IDYES then
      begin
        CryptoSoftTargetDir := ExpandConstant('{pf}\CryptoSoft');

        // Crée le dossier si besoin
        if not DirExists(CryptoSoftTargetDir) then
        begin
          if not CreateDir(CryptoSoftTargetDir) then
          begin
            MsgBox('Échec de la création du dossier pour CryptoSoft dans Program Files.', mbError, MB_OK);
            Exit;
          end;
        end;

        // Copier le fichier
        if not FileCopy(ExpandConstant('{tmp}\CryptoSoft.exe'), CryptoSoftTargetDir + '\CryptoSoft.exe', False) then
        begin
          MsgBox('Erreur lors de la copie de CryptoSoft.exe.', mbError, MB_OK);
        end
        else
        begin
          Log('CryptoSoft.exe installé avec succès.');
        end;
      end
      else
      begin
        MsgBox('CryptoSoft n''a pas été installé. Cela peut nuire au bon fonctionnement de EasySave.', mbInformation, MB_OK);
      end;
    end
    else
    begin
      Log('CryptoSoft est déjà installé.');
    end;
  end;
end;
